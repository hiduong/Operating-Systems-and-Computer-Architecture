/****************
qemu with -kernel file.bin ==> start to execute from 0x10000 ==>
file.bin must be loaded to 0x10000 ==> . = 0x10000
************/

ENTRY(start)
SECTIONS
{
   . = 0x10000;
   .start . : { ts.o(.text) }
   .text : { *(.text) }
   .data : { *(.data) }
   .bss : { *(.bss COMMON) }

   . = ALIGN(8);
   . = . + 0x10000; /* 0x1000 for 4KB; x10000=64kB of stack memory */
   stack_top = .;
}

/* QUESTION: show the memory map of the image file generated by the linker */

/* 
  Used arm-none-eabi-readelf -a t.elf and arm-none-eabi-objdump -d t.elf to display contents of .elf file.

  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .start            PROGBITS        00010000 010000 000010 00  AX  0   0  4
  [ 2] .text             PROGBITS        00010010 010010 00081c 00  AX  0   0  4
  [ 3] .rodata           PROGBITS        0001082c 01082c 000087 00   A  0   0  4
  [ 4] .data             PROGBITS        000108b4 0108b4 00002c 00  WA  0   0  4
  [ 5] .bss              NOBITS          000108e0 0108e0 00002c 00  WA  0   0  4
  [ 6] .ARM.attributes   ARM_ATTRIBUTES  00000000 0108e0 00002e 00      0   0  1
  [ 7] .comment          PROGBITS        00000000 01090e 000038 01  MS  0   0  1
  [ 8] .debug_line       PROGBITS        00000000 010946 00012e 00      0   0  1
  [ 9] .debug_info       PROGBITS        00000000 010a74 00046b 00      0   0  1
  [10] .debug_abbrev     PROGBITS        00000000 010edf 000153 00      0   0  1
  [11] .debug_aranges    PROGBITS        00000000 011038 000040 00      0   0  8
  [12] .debug_str        PROGBITS        00000000 011078 000102 01  MS  0   0  1
  [13] .debug_frame      PROGBITS        00000000 01117c 0001c4 00      0   0  4
  [14] .shstrtab         STRTAB          00000000 011712 0000a1 00      0   0  1
  [15] .symtab           SYMTAB          00000000 011340 000340 10     16  31  4
  [16] .strtab           STRTAB          00000000 011680 000092 00      0   0  1

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x010000 0x00010000 0x00010000 0x008e0 0x0090c RWE 0x10000

 Section to Segment mapping:
  Segment Sections...
   00     .start .text .rodata .data .bss
 */
